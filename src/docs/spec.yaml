openapi: 3.0.0
info:
  description: |
    Docs for defillama's open API

    Need higher rate limits or priority support? We offer a premium plan for 300$/mo. To get it, go to https://defillama.com/subscription
  version: 1.0.0-oas3
  title: DefiLlama API
tags:
  - name: TVL
    description: Retrieve TVL data
  - name: coins
    description: General blockchain data used by defillama and open-sourced
  - name: stablecoins
    description: Data from our stablecoins dashboard
  - name: yields
    description: Data from our yields/APY dashboard
  - name: volumes
    description: Data from our volumes dashboards
  - name: fees and revenue
    description: Data from our fees and revenue dashboard
servers:
  - url: https://api.llama.fi
paths:
  /protocols:
    get:
      tags:
        - TVL
      summary: List all protocols on defillama along with their tvl
      responses:
        '200':
          description: Array of all protocols with their TVL data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "2269"
                    name:
                      type: string
                      example: "Aave"
                    symbol:
                      type: string
                      example: "AAVE"
                    category:
                      type: string
                      example: "Lending"
                    chains:
                      type: array
                      items:
                        type: string
                      example: ["Ethereum", "Polygon"]
                    tvl:
                      type: number
                      example: 5200000000
                    chainTvls:
                      type: object
                      additionalProperties:
                        type: number
                      example:
                        Ethereum: 3200000000
                        Polygon: 2000000000
                    change_1d:
                      type: number
                      example: 2.1
                    change_7d:
                      type: number
                      example: -5.3
  /protocol/{protocol}:
    get:
      tags:
        - TVL
      summary: Get historical TVL of a protocol and breakdowns by token and chain
      parameters:
        - name: protocol
          in: path
          description: protocol slug
          required: true
          schema:
            type: string
            example: aave
      responses:
        '200':
          description: Protocol details with historical TVL data and chain breakdowns
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "parent#aave"
                  name:
                    type: string
                    example: "AAVE"
                  symbol:
                    type: string
                    example: "AAVE"
                  category:
                    type: string
                    example: "Lending"
                  chains:
                    type: array
                    items:
                      type: string
                    example: ["Ethereum", "Polygon", "Avalanche"]
                  currentChainTvls:
                    type: object
                    additionalProperties:
                      type: number
                    example:
                      Ethereum: 3200000000
                      Polygon: 1500000000
                  chainTvls:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        tvl:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: number
                                example: 1609459200
                              totalLiquidityUSD:
                                type: number
                                example: 1000000
                        tokens:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: number
                                example: 1609459200
                              tokens:
                                type: object
                                additionalProperties:
                                  type: number
                                example:
                                  USDC: 1000000
                                  USDT: 800000
        '404':
          description: Protocol not found
  /v2/historicalChainTvl:
    get:
      tags:
        - TVL
      summary: Get historical TVL (excludes liquid staking and double counted tvl) of DeFi on all chains
      responses:
        '200':
          description: Historical TVL data for all chains combined
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: number
                      description: Unix timestamp
                      example: 1609459200
                    tvl:
                      type: number
                      description: Total Value Locked in USD across all chains
                      example: 15000000000
  /v2/historicalChainTvl/{chain}:
    get:
      tags:
        - TVL
      summary: Get historical TVL (excludes liquid staking and double counted tvl) of a chain
      parameters:
        - name: chain
          in: path
          required: true
          description: chain slug, you can get these from /chains or the chains property on /protocols
          schema:
            type: string
            example: Ethereum
      responses:
        '200':
          description: Historical TVL data for the specified chain
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: number
                      description: Unix timestamp
                      example: 1609459200
                    tvl:
                      type: number
                      description: Total Value Locked in USD for this chain
                      example: 45000000000
        '404':
          description: Chain not found
  /tvl/{protocol}:
    get:
      tags:
        - TVL
      summary: Simplified endpoint to get current TVL of a protocol
      description: Simplified endpoint that only returns a number, the current TVL of a protocol
      parameters:
        - name: protocol
          in: path
          required: true
          description: protocol slug
          schema:
            type: string
            example: uniswap
      responses:
        '200':
          description: Current TVL of the protocol in USD
          content:
            application/json:
              schema:
                type: number
                description: Total Value Locked in USD
                example: 4962012809.795062
        '404':
          description: Protocol not found
  /v2/chains:
    get:
      tags:
        - TVL
      summary: Get current TVL of all chains
      responses:
        '200':
          description: Array of all chains with their TVL data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    gecko_id:
                      type: string
                      nullable: true
                      description: CoinGecko ID for the chain's native token
                      example: "ethereum"
                    tvl:
                      type: number
                      description: Total Value Locked in USD
                      example: 65998652431.40251
                    tokenSymbol:
                      type: string
                      nullable: true
                      description: Native token symbol
                      example: "ETH"
                    cmcId:
                      type: string
                      nullable: true
                      description: CoinMarketCap ID
                      example: "1027"
                    name:
                      type: string
                      description: Chain name
                      example: "Ethereum"
                    chainId:
                      type: number
                      nullable: true
                      description: Chain ID number
                      example: 1
  /prices/current/{coins}:
    get:
      tags:
        - coins
      summary: Get current prices of tokens by contract address
      description: |
        The goal of this API is to price as many tokens as possible, including exotic ones that never get traded, which makes them impossible to price by looking at markets.

        The base of our data are prices pulled from coingecko, which is then extended through multiple means:
        - We price all bridged tokens by using the price of the token in it's original chain, so we fetch all bridged versions of USDC on arbitrum, fantom, avax... and price all them using the price for the token on Ethereum, which we know. Right now we support 10 different bridging protocols.
        - We have multiple adapters to price specialized sets of tokens by running custom code:
          - We price yearn's yToken LPs by checking how much underlying token can be withdrawn for each LP
          - Aave, compound and euler LP tokens are also priced based on their relationship against underlying tokens
          - Uniswap, curve, balancer and stargate LPs are priced using the underlying tokens in each pair
          - GMX's GLP token is priced based on the value of tokens given on withdrawal (which includes calculations based on trader's PnL)
          
          - Synthetix tokens are priced using forex prices of the coin they are pegged to
        - For tokens that we haven't been able to price in any other way, we find the pool with most liquidity for each on uniswap, curve and serum and then use the prices provided on those exchanges.
          
          Unlike all the other tokens, we can't confirm that these prices are correct, so we only ingest the ones that have sufficient liquidity and, even in that case, we attach a `confidence` value to them that is related to the depth of liquidity and which represents our confidence in the quality of each price. API consumers can choose to filter out prices with low confidence values.
          
         Our API server is fully open source and we are constantly adding more pricing adapters, extending the amount of tokens we support.
          
        Tokens are queried using {chain}:{address}, where chain is an identifier such as ethereum, bsc, polygon, avax... You can also get tokens by coingecko id by setting `coingecko` as the chain, eg: coingecko:ethereum, coingecko:bitcoin. Examples:
          - ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1
          - bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878
          - coingecko:ethereum
          - arbitrum:0x4277f8f2c384827b5273592ff7cebd9f2c1ac258
      servers:
        - url: https://coins.llama.fi
      parameters:
        - name: coins
          in: path
          required: true
          description: set of comma-separated tokens defined as {chain}:{address}
          schema:
            type: string
            example: ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8
        - name: searchWidth
          in: query
          required: false
          description: time range on either side to find price data, defaults to 6 hours
          schema:
            type: string
            example: 4h
      responses:
        '200':
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  coins:
                    type: object
                    properties:
                      'ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1':
                        type: object
                        properties:
                          decimals:
                            type: number
                            example: 8
                          price:
                            type: number
                            example: 0.022053735051098835
                          'symbol':
                            type: string
                            example: 'cDAI'
                          'timestamp':
                            type: number
                            example: 0.99
        '502':
          description: Internal error
  /prices/historical/{timestamp}/{coins}:
    get:
      tags:
        - coins
      summary: Get historical prices of tokens by contract address
      description: See /prices/current for explanation on how prices are sourced.
      servers:
        - url: https://coins.llama.fi
      parameters:
        - name: coins
          in: path
          required: true
          description: set of comma-separated tokens defined as {chain}:{address}
          schema:
            type: string
            example: ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8
        - name: timestamp
          in: path
          required: true
          description: UNIX timestamp of time when you want historical prices
          schema:
            type: number
            example: 1648680149
        - name: searchWidth
          in: query
          required: false
          description: time range on either side to find price data, defaults to 6 hours
          schema:
            type: string
            example: 4h
      responses:
        '200':
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  coins:
                    type: object
                    properties:
                      'ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1':
                        type: object
                        properties:
                          decimals:
                            type: number
                            example: 8
                          price:
                            type: number
                            example: 0.022053735051098835
                          'symbol':
                            type: string
                            example: 'cDAI'
                          'timestamp':
                            type: number
                            example: 1648680149
        '502':
          description: Internal error
  /batchHistorical:
    get:
      tags:
        - coins
      summary: Get historical prices for multiple tokens at multiple different timestamps
      description: |
        Strings accepted by period and searchWidth:
        Can use regular chart candle notion like ‘4h’ etc where:
        W = week, D = day, H = hour, M = minute (not case sensitive)
      servers:
        - url: https://coins.llama.fi
      parameters:
        - name: coins
          in: query
          required: true
          description: object where keys are coins in the form {chain}:{address}, and values are arrays of requested timestamps
          schema:
            type: string
            example: |
              {"avax:0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e": [1666876743, 1666862343], "coingecko:ethereum": [1666869543, 1666862343]}
        - name: searchWidth
          in: query
          required: false
          description: time range on either side to find price data, defaults to 6 hours
          schema:
            type: string
            example: 600
      responses:
        '200':
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  coins:
                    type: object
                    properties:
                      'avax:0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e':
                        type: object
                        properties:
                          symbol:
                            type: string
                            example: 'USDC'
                          prices:
                            type: array
                            items:
                              type: object
                              properties:
                                timestamp:
                                  type: number
                                  example: 1666876674
                                price:
                                  type: number
                                  example: 0.999436
                                confidence:
                                  type: number
                                  example: 0.99
        '502':
          description: Internal error
  /chart/{coins}:
    get:
      tags:
        - coins
      summary: Get token prices at regular time intervals
      description: |
        Strings accepted by period and searchWidth:
        Can use regular chart candle notion like ‘4h’ etc where:
        W = week, D = day, H = hour, M = minute (not case sensitive)
      servers:
        - url: https://coins.llama.fi
      parameters:
        - name: coins
          in: path
          required: true
          description: set of comma-separated tokens defined as {chain}:{address}
          schema:
            type: string
            example: ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8
        - name: start
          in: query
          required: false
          description: unix timestamp of earliest data point requested
          schema:
            type: number
            example: 1664364537
        - name: end
          in: query
          required: false
          description: unix timestamp of latest data point requested
          schema:
            type: number
            example:
        - name: span
          in: query
          required: false
          description: number of data points returned, defaults to 0
          schema:
            type: number
            example: 10
        - name: period
          in: query
          required: false
          description: duration between data points, defaults to 24 hours
          schema:
            type: string
            example: 2d
        - name: searchWidth
          in: query
          required: false
          description: time range on either side to find price data, defaults to 10% of period
          schema:
            type: string
            example: 600
      responses:
        '200':
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  coins:
                    type: object
                    properties:
                      'ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1':
                        type: object
                        properties:
                          decimals:
                            type: number
                            example: 8
                          confidence:
                            type: number
                            example: 0.99
                          prices:
                            type: array
                            items:
                              type: object
                              properties:
                                timestamp:
                                  type: number
                                  example: 1666790570
                                price:
                                  type: number
                                  example: 0.984519
                          symbol:
                            type: string
                            example: 'HUSD'
        '502':
          description: Internal error
  /percentage/{coins}:
    get:
      tags:
        - coins
      summary: Get percentage change in price over time
      description: |
        Strings accepted by period:
        Can use regular chart candle notion like ‘4h’ etc where:
        W = week, D = day, H = hour, M = minute (not case sensitive)
      servers:
        - url: https://coins.llama.fi
      parameters:
        - name: coins
          in: path
          required: true
          description: set of comma-separated tokens defined as {chain}:{address}
          schema:
            type: string
            example: ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8
        - name: timestamp
          in: query
          required: false
          description: timestamp of data point requested, defaults to time now
          schema:
            type: number
            example: 1664364537
        - name: lookForward
          in: query
          required: false
          description: whether you want the duration after your given timestamp or not, defaults to false (looking back)
          schema:
            type: boolean
            example: false
        - name: period
          in: query
          required: false
          description: duration between data points, defaults to 24 hours
          schema:
            type: string
            example: 3w
      responses:
        '200':
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  coins:
                    type: object
                    properties:
                      'ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1':
                        type: number
                        example: -2.3009954568977147
        '502':
          description: Internal error
  /prices/first/{coins}:
    get:
      tags:
        - coins
      summary: Get earliest timestamp price record for coins
      servers:
        - url: https://coins.llama.fi
      parameters:
        - name: coins
          in: path
          required: true
          description: set of comma-separated tokens defined as {chain}:{address}
          schema:
            type: string
            example: ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8
      responses:
        '200':
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  coins:
                    type: object
                    properties:
                      'ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1':
                        type: object
                        properties:
                          price:
                            type: number
                            example: 0.9992047673109988
                          symbol:
                            type: string
                            example: 'HUSD'
                          'timestamp':
                            type: number
                            example: 1568883821
        '502':
          description: Internal error
  /block/{chain}/{timestamp}:
    get:
      tags:
        - coins
      summary: Get the closest block to a timestamp
      description: |
        Runs binary search over a blockchain's blocks to get the closest one to a timestamp.
        Every time this is run we add new data to our database, so each query permanently speeds up future queries.
      servers:
        - url: https://coins.llama.fi
      parameters:
        - name: chain
          in: path
          description: Chain which you want to get the block from
          required: true
          schema:
            type: string
        - name: timestamp
          in: path
          description: UNIX timestamp of the block you are searching for
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  height:
                    type: integer
                    format: uint
                    example: 11150916
                  timestamp:
                    type: integer
                    format: uint
                    example: 1603964988
        '400':
          description: Invalid chain or timestamp provided
  /stablecoins:
    get:
      tags:
        - stablecoins
      summary: List all stablecoins along with their circulating amounts
      servers:
        - url: https://stablecoins.llama.fi
      parameters:
        - name: includePrices
          in: query
          required: false
          description: set whether to include current stablecoin prices
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Array of all stablecoins with their circulation data
          content:
            application/json:
              schema:
                type: object
                properties:
                  peggedAssets:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1"
                        name:
                          type: string
                          example: "Tether"
                        symbol:
                          type: string
                          example: "USDT"
                        pegType:
                          type: string
                          example: "peggedUSD"
                        pegMechanism:
                          type: string
                          example: "fiat-backed"
                        circulating:
                          type: object
                          properties:
                            peggedUSD:
                              type: number
                              example: 159510682147.76874
                        chains:
                          type: array
                          items:
                            type: string
                          example: ["Ethereum", "Tron", "BSC"]
                        chainCirculating:
                          type: object
                          additionalProperties:
                            type: object
                            properties:
                              current:
                                type: object
                                properties:
                                  peggedUSD:
                                    type: number
                                    example: 50000000000
                        price:
                          type: number
                          example: 1.001
  /stablecoincharts/all:
    get:
      tags:
        - stablecoins
      summary: Get historical mcap sum of all stablecoins
      servers:
        - url: https://stablecoins.llama.fi
      parameters:
        - name: stablecoin
          in: query
          required: false
          description: stablecoin ID, you can get these from /stablecoins
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Historical market cap data for all stablecoins
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: number
                      example: 1609459200
                    totalCirculating:
                      type: object
                      properties:
                        peggedUSD:
                          type: number
                          example: 45000000000
  /stablecoincharts/{chain}:
    get:
      tags:
        - stablecoins
      summary: Get historical mcap sum of all stablecoins in a chain
      servers:
        - url: https://stablecoins.llama.fi
      parameters:
        - name: chain
          in: path
          required: true
          description: chain slug, you can get these from /chains or the chains property on /protocols
          schema:
            type: string
            example: Ethereum
        - name: stablecoin
          in: query
          required: false
          description: stablecoin ID, you can get these from /stablecoins
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Historical market cap data for stablecoins on specified chain
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: number
                      example: 1609459200
                    totalCirculating:
                      type: object
                      properties:
                        peggedUSD:
                          type: number
                          example: 12000000000
  /stablecoin/{asset}:
    get:
      tags:
        - stablecoins
      summary: Get historical mcap and historical chain distribution of a stablecoin
      servers:
        - url: https://stablecoins.llama.fi
      parameters:
        - name: asset
          in: path
          required: true
          description: stablecoin ID, you can get these from /stablecoins
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Historical market cap and chain distribution for specific stablecoin
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  name:
                    type: string
                    example: "Tether"
                  symbol:
                    type: string
                    example: "USDT"
                  totalCirculating:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: number
                          example: 1609459200
                        totalCirculating:
                          type: number
                          example: 50000000000
                  chainCirculating:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: number
                            example: 1609459200
                          circulating:
                            type: number
                            example: 20000000000
  /stablecoinchains:
    get:
      tags:
        - stablecoins
      summary: Get current mcap sum of all stablecoins on each chain
      servers:
        - url: https://stablecoins.llama.fi
      responses:
        '200':
          description: Current market cap of stablecoins by chain
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Ethereum"
                    totalCirculating:
                      type: object
                      properties:
                        peggedUSD:
                          type: number
                          example: 75000000000
  /stablecoinprices:
    get:
      tags:
        - stablecoins
      summary: Get historical prices of all stablecoins
      servers:
        - url: https://stablecoins.llama.fi
      responses:
        '200':
          description: Historical prices for all stablecoins
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: number
                      example: 1609459200
                    prices:
                      type: object
                      additionalProperties:
                        type: number
                      example:
                        USDT: 1.001
                        USDC: 0.999
                        DAI: 1.002
  /pools:
    get:
      tags:
        - yields
      summary: Retrieve the latest data for all pools, including enriched information such as predictions
      servers:
        - url: https://yields.llama.fi
      responses:
        '200':
          description: Array of all yield farming pools with their data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        pool:
                          type: string
                          example: "747c1d2a-c668-4682-b9f9-296708a3dd90"
                        chain:
                          type: string
                          example: "Ethereum"
                        project:
                          type: string
                          example: "Aave"
                        symbol:
                          type: string
                          example: "USDC"
                        tvlUsd:
                          type: number
                          example: 1500000000
                        apy:
                          type: number
                          example: 5.2
                        apyBase:
                          type: number
                          example: 3.1
                        apyReward:
                          type: number
                          example: 2.1
                        rewardTokens:
                          type: array
                          items:
                            type: string
                          example: ["COMP", "AAVE"]
                        underlyingTokens:
                          type: array
                          items:
                            type: string
                          example: ["USDC"]
                        poolMeta:
                          type: string
                          example: "Lending pool"
                        url:
                          type: string
                          example: "https://app.aave.com/reserve-overview/USDC"
                        predictions:
                          type: object
                          properties:
                            predictedClass:
                              type: string
                              example: "Stable"
                            predictedProbability:
                              type: number
                              example: 0.95
                            binnedConfidence:
                              type: number
                              example: 1
  /chart/{pool}:
    get:
      tags:
        - yields
      summary: Get historical APY and TVL of a pool
      servers:
        - url: https://yields.llama.fi
      parameters:
        - name: pool
          in: path
          required: true
          description: pool id, can be retrieved from /pools (property is called pool)
          schema:
            type: string
            example: '747c1d2a-c668-4682-b9f9-296708a3dd90'
      responses:
        '200':
          description: Historical APY and TVL data for specified pool
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          example: "2024-01-01T00:00:00.000Z"
                        tvlUsd:
                          type: number
                          example: 1500000000
                        apy:
                          type: number
                          example: 5.2
                        apyBase:
                          type: number
                          example: 3.1
                        apyReward:
                          type: number
                          example: 2.1
  /overview/dexs:
    get:
      tags:
        - volumes
      summary: List all dexs along with summaries of their volumes and dataType history data
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: excludeTotalDataChart
          in: query
          required: false
          description: true to exclude aggregated chart from response
          schema:
            type: boolean
            example: true
        - name: excludeTotalDataChartBreakdown
          in: query
          required: false
          description: true to exclude broken down chart from response
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Overview of all DEXs with volume data
          content:
            application/json:
              schema:
                type: object
                properties:
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Uniswap"
                        displayName:
                          type: string
                          example: "Uniswap V3"
                        total24h:
                          type: number
                          example: 1500000000
                        total7d:
                          type: number
                          example: 10000000000
                        change_1d:
                          type: number
                          example: 5.2
                        change_7d:
                          type: number
                          example: -2.1
                        chains:
                          type: array
                          items:
                            type: string
                          example: ["Ethereum", "Polygon"]
                  totalDataChart:
                    type: array
                    items:
                      type: array
                      items:
                        oneOf:
                          - type: number
                          - type: object
                      example: [1640995200, 2500000000]
                  allChains:
                    type: array
                    items:
                      type: string
                    example: ["Ethereum", "BSC", "Polygon"]
  /overview/dexs/{chain}:
    get:
      tags:
        - volumes
      summary: List all dexs along with summaries of their volumes and dataType history data filtering by chain
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: chain
          in: path
          required: true
          description: chain name, list of all supported chains can be found under allChains attribute in /overview/dexs response
          schema:
            type: string
            example: ethereum
        - name: excludeTotalDataChart
          in: query
          required: false
          description: true to exclude aggregated chart from response
          schema:
            type: boolean
            example: true
        - name: excludeTotalDataChartBreakdown
          in: query
          required: false
          description: true to exclude broken down chart from response
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Overview of DEXs on specified chain with volume data
          content:
            application/json:
              schema:
                type: object
                properties:
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Uniswap"
                        total24h:
                          type: number
                          example: 800000000
                        change_1d:
                          type: number
                          example: 3.2
                  totalDataChart:
                    type: array
                    items:
                      type: array
                      example: [1640995200, 1200000000]
  /summary/dexs/{protocol}:
    get:
      tags:
        - volumes
      summary: Get summary of dex volume with historical data
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: protocol
          in: path
          required: true
          description: protocol slug
          schema:
            type: string
            example: uniswap
        - name: excludeTotalDataChart
          in: query
          required: false
          description: true to exclude aggregated chart from response
          schema:
            type: boolean
            example: true
        - name: excludeTotalDataChartBreakdown
          in: query
          required: false
          description: true to exclude broken down chart from response
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: DEX protocol volume summary with historical data
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "Uniswap"
                  total24h:
                    type: number
                    example: 1500000000
                  totalAllTime:
                    type: number
                    example: 500000000000
                  totalDataChart:
                    type: array
                    items:
                      type: array
                      example: [1640995200, 1500000000]
                  totalDataChartBreakdown:
                    type: array
                    items:
                      type: array
                      example: [1640995200, {"Uniswap V3": 1200000000, "Uniswap V2": 300000000}]
                  chains:
                    type: array
                    items:
                      type: string
                    example: ["Ethereum", "Polygon"]
  /overview/options:
    get:
      tags:
        - volumes
      summary: List all options dexs along with summaries of their volumes and dataType history data
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: excludeTotalDataChart
          in: query
          required: false
          description: true to exclude aggregated chart from response
          schema:
            type: boolean
            example: true
        - name: excludeTotalDataChartBreakdown
          in: query
          required: false
          description: true to exclude broken down chart from response
          schema:
            type: boolean
            example: true
        - name: dataType
          in: query
          required: false
          description: Desired data type, dailyNotionalVolume by default.
          schema:
            type: string
            enum: [dailyPremiumVolume, dailyNotionalVolume]
            example: dailyPremiumVolume
      responses:
        '200':
          description: Overview of all options DEXs with volume data
          content:
            application/json:
              schema:
                type: object
                properties:
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Deribit"
                        total24h:
                          type: number
                          example: 500000000
                        change_1d:
                          type: number
                          example: 8.5
                  totalDataChart:
                    type: array
                    items:
                      type: array
                      example: [1640995200, 750000000]
  /overview/options/{chain}:
    get:
      tags:
        - volumes
      summary: List all options dexs along with summaries of their volumes and dataType history data filtering by chain
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: chain
          in: path
          required: true
          description: chain name, list of all supported chains can be found under allChains attribute in /overview/options response
          schema:
            type: string
            example: ethereum
        - name: excludeTotalDataChart
          in: query
          required: false
          description: true to exclude aggregated chart from response
          schema:
            type: boolean
            example: true
        - name: excludeTotalDataChartBreakdown
          in: query
          required: false
          description: true to exclude broken down chart from response
          schema:
            type: boolean
            example: true
        - name: dataType
          in: query
          required: false
          description: Desired data type, dailyNotionalVolume by default.
          schema:
            type: string
            enum: [dailyPremiumVolume, dailyNotionalVolume]
            example: dailyPremiumVolume
      responses:
        '200':
          description: successful operation
  /summary/options/{protocol}:
    get:
      tags:
        - volumes
      summary: Get summary of options dex volume with historical data
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: protocol
          in: path
          required: true
          description: protocol slug
          schema:
            type: string
            example: derive
        - name: dataType
          in: query
          required: false
          description: Desired data type, dailyNotionalVolume by default.
          schema:
            type: string
            enum: [dailyPremiumVolume, dailyNotionalVolume]
            example: dailyPremiumVolume
      responses:
        '200':
          description: successful operation
  /overview/fees:
    get:
      tags:
        - fees and revenue
      summary: List all protocols along with summaries of their fees and revenue and dataType history data
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: excludeTotalDataChart
          in: query
          required: false
          description: true to exclude aggregated chart from response
          schema:
            type: boolean
            example: true
        - name: excludeTotalDataChartBreakdown
          in: query
          required: false
          description: true to exclude broken down chart from response
          schema:
            type: boolean
            example: true
        - name: dataType
          in: query
          required: false
          description: Desired data type, dailyFees by default.
          schema:
            type: string
            enum: [dailyFees, dailyRevenue]
            example: dailyFees
      responses:
        '200':
          description: Overview of all protocols with fees and revenue data
          content:
            application/json:
              schema:
                type: object
                properties:
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Uniswap"
                        total24h:
                          type: number
                          example: 5000000
                        revenue24h:
                          type: number
                          example: 2000000
                        change_1d:
                          type: number
                          example: 12.5
                        chains:
                          type: array
                          items:
                            type: string
                          example: ["Ethereum", "Polygon"]
                  totalDataChart:
                    type: array
                    items:
                      type: array
                      example: [1640995200, 25000000]
                  totalDataChartBreakdown:
                    type: array
                    items:
                      type: array
                      example: [1640995200, {"Uniswap": 5000000, "Compound": 3000000}]
  /overview/fees/{chain}:
    get:
      tags:
        - fees and revenue
      summary: List all protocols along with summaries of their fees and revenue and dataType history data by chain
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: chain
          in: path
          required: true
          description: chain name, list of all supported chains can be found under allChains attribute in /overview/fees response
          schema:
            type: string
            example: ethereum
        - name: excludeTotalDataChart
          in: query
          required: false
          description: true to exclude aggregated chart from response
          schema:
            type: boolean
            example: true
        - name: excludeTotalDataChartBreakdown
          in: query
          required: false
          description: true to exclude broken down chart from response
          schema:
            type: boolean
            example: true
        - name: dataType
          in: query
          required: false
          description: Desired data type, dailyFees by default.
          schema:
            type: string
            enum: [dailyFees, dailyRevenue]
            example: dailyFees
      responses:
        '200':
          description: successful operation
  /summary/fees/{protocol}:
    get:
      tags:
        - fees and revenue
      summary: Get summary of protocol fees and revenue with historical data
      servers:
        - url: https://api.llama.fi
      parameters:
        - name: protocol
          in: path
          required: true
          description: protocol slug
          schema:
            type: string
            example: derive
        - name: dataType
          in: query
          required: false
          description: Desired data type, dailyFees by default.
          schema:
            type: string
            enum: [dailyFees, dailyRevenue]
            example: dailyFees
      responses:
        '200':
          description: successful operation
